{"version":3,"sources":["Components/TodoItem.js","Components/TodoLists.js","Components/Header.js","Components/InputTodo.js","Components/TodoContainer.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodoLists","this","todos","map","key","Component","Header","prevProps","prevState","bgColor","Math","floor","random","headerSpan","document","getElementById","innerHTML","backgroundColor","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","show","handleChange","delTodo","axios","delete","then","reponse","filter","addTodoItem","post","response","data","get","params","_limit","React","ReactDOM","render"],"mappings":"iQAoCeA,MAlCf,SAAkBC,GAChB,IADuB,EAOUA,EAAMC,KAA/BC,EAPe,EAOfA,UAAWC,EAPI,EAOJA,GAAIC,EAPA,EAOAA,MAGvB,OACE,6BACE,wBAAIC,UAAU,aACZ,2BACEC,KAAK,WACLC,QAASL,EACTM,SAAU,kBAAMR,EAAMS,kBAAkBN,MAE1C,4BACEO,QAAS,WACPV,EAAMW,gBAAgBX,EAAMC,KAAKE,MAFrC,UAOA,0BAAMS,MAAOZ,EAAMC,KAAKC,UAxBP,CACrBW,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAoByC,MAClDZ,MCPIa,E,uKAjBH,IAAD,OACP,OACE,6BACGC,KAAKlB,MAAMmB,MAAMC,KAAI,SAACnB,GAAD,OACpB,kBAAC,EAAD,CACEoB,IAAKpB,EAAKE,GACVF,KAAMA,EACNQ,kBAAmB,EAAKT,MAAMS,kBAC9BE,gBAAiB,EAAKX,MAAMW,iBAE3B,a,GAXWW,aC8BTC,E,iLA9BMC,EAAWC,GAC5B,IAGIC,EAAU,OAHNC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGG,IAFnBF,KAAKC,MAAsB,IAAhBD,KAAKE,UAEa,IAD7BF,KAAKC,MAAsB,IAAhBD,KAAKE,UACuB,IAE3CL,EAAUM,aAAeZ,KAAKlB,MAAM8B,aACtCC,SAASC,eAAe,QAAQC,UAAY,UAC5CF,SAASC,eAAe,QAAQpB,MAAMsB,gBAAkBR,K,+BAS1D,OACE,4BAAQd,MALU,CAClBuB,QAAS,SACTC,WAAY,QAIV,wBAAIxB,MAAO,CAAEyB,SAAU,OAAQC,aAAc,SAA7C,mBACkB,0BAAMnC,GAAG,UAE3B,uBAAGS,MAAO,CAAEyB,SAAU,SAAtB,0D,GAvBaf,a,QCkCNiB,E,4MAjCbC,MAAQ,CACNpC,MAAO,I,EAETI,SAAW,SAACiC,GACV,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAG9BC,aAAe,SAACL,GACdA,EAAEM,iBAEF,EAAK/C,MAAMgD,aAAa,EAAKR,MAAMpC,OACnC,EAAKsC,SAAS,CACZtC,MAAO,M,uDAIT,OACE,0BAAM6C,SAAU/B,KAAK4B,aAAczC,UAAU,kBAC3C,2BACEC,KAAK,OACLD,UAAU,aACV6C,YAAY,yBACZL,MAAO3B,KAAKsB,MAAMpC,MAClBwC,KAAK,QACLpC,SAAUU,KAAKV,WAGjB,2BAAOF,KAAK,SAASuC,MAAM,SAASxC,UAAU,sB,GA7B9BiB,a,gBC2ET6B,E,4MArEbX,MAAQ,CACNrB,MAAO,GACPiC,MAAM,G,EAGRC,aAAe,SAAClD,GAEd,EAAKuC,SAAS,CACZvB,MAAO,EAAKqB,MAAMrB,MAAMC,KAAI,SAACnB,GAI3B,OAHIA,EAAKE,KAAOA,IACdF,EAAKC,WAAaD,EAAKC,WAElBD,KAETmD,MAAO,EAAKZ,MAAMY,Q,EAGtBE,QAAU,SAACnD,GAGToD,IACGC,OADH,qDACwDrD,IACrDsD,MAAK,SAACC,GAAD,OACJ,EAAKhB,SAAS,CACZvB,MAAM,YACD,EAAKqB,MAAMrB,MAAMwC,QAAO,SAAC1D,GAC1B,OAAOA,EAAKE,KAAOA,Y,EAM/ByD,YAAc,SAACxD,GACbmD,IACGM,KAAK,6CAA8C,CAClDzD,MAAOA,EACPF,WAAW,IAEZuD,MAAK,SAACK,GAAD,OACJ,EAAKpB,SAAS,CACZvB,MAAM,GAAD,mBAAM,EAAKqB,MAAMrB,OAAjB,CAAwB2C,EAASC,a,kEAKzB,IAAD,OAClBR,IACGS,IAAI,6CAA8C,CACjDC,OAAQ,CACNC,OAAQ,MAGXT,MAAK,SAACK,GAAD,OAAc,EAAKpB,SAAS,CAAEvB,MAAO2C,EAASC,Y,+BAItD,OACE,yBAAK1D,UAAU,aACb,kBAAC,EAAD,CAAQyB,WAAYZ,KAAKsB,MAAMY,OAC/B,kBAAC,EAAD,CAAWJ,aAAc9B,KAAK0C,cAC9B,kBAAC,EAAD,CACEzC,MAAOD,KAAKsB,MAAMrB,MAClBV,kBAAmBS,KAAKmC,aACxB1C,gBAAiBO,KAAKoC,e,GAhEJa,IAAM7C,W,MCDlC8C,IAASC,OAAO,kBAAC,EAAD,MAAmBtC,SAASC,eAAe,W","file":"static/js/main.4a3fabe3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TodoItem(props) {\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#d35e0f\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  };\r\n  const { completed, id, title } = props.todo;\r\n  //   render() {\r\n\r\n  return (\r\n    <div>\r\n      <li className=\"todo-item\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          onChange={() => props.handleChangeProps(id)}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            props.deleteTodoProps(props.todo.id);\r\n          }}\r\n        >\r\n          DELETE\r\n        </button>\r\n        <span style={props.todo.completed ? completedStyle : null}>\r\n          {title}\r\n        </span>\r\n      </li>\r\n    </div>\r\n  );\r\n  // }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoLists extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.todos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            handleChangeProps={this.props.handleChangeProps}\r\n            deleteTodoProps={this.props.deleteTodoProps}\r\n          >\r\n            {\" \"}\r\n          </TodoItem>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoLists;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  componentDidUpdate(prevProps, prevState) {\r\n    var x = Math.floor(Math.random() * 256);\r\n    var y = Math.floor(Math.random() * 256);\r\n    var z = Math.floor(Math.random() * 256);\r\n    var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n    if (prevProps.headerSpan !== this.props.headerSpan) {\r\n      document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n      document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const headerStyle = {\r\n      padding: \"20px 0\",\r\n      lineHeight: \"2em\",\r\n    };\r\n    return (\r\n      <header style={headerStyle}>\r\n        <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n          Simple Todo App <span id=\"inH1\"></span>\r\n        </h1>\r\n        <p style={{ fontSize: \"19px\" }}>\r\n          Please add to-dos item(s) through the input field\r\n        </p>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass InputTodo extends Component {\r\n  state = {\r\n    title: \"\",\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state.title);\r\n    this.props.addTodoProps(this.state.title);\r\n    this.setState({\r\n      title: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"Add Todo Items here...\"\r\n          value={this.state.title}\r\n          name=\"title\"\r\n          onChange={this.onChange}\r\n        />\r\n\r\n        <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default InputTodo;\r\n","import React from \"react\";\r\nimport TodoLists from \"./TodoLists\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\n//import { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass TodoContainer extends React.Component {\r\n  state = {\r\n    todos: [],\r\n    show: false,\r\n  };\r\n\r\n  handleChange = (id) => {\r\n    //console.log(\"Clicked\", id);\r\n    this.setState({\r\n      todos: this.state.todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      }),\r\n      show: !this.state.show,\r\n    });\r\n  };\r\n  delTodo = (id) => {\r\n    // console.log(\"deleted\", id);\r\n\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n      .then((reponse) =>\r\n        this.setState({\r\n          todos: [\r\n            ...this.state.todos.filter((todo) => {\r\n              return todo.id !== id;\r\n            }),\r\n          ],\r\n        })\r\n      );\r\n  };\r\n  addTodoItem = (title) => {\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n        title: title,\r\n        completed: false,\r\n      })\r\n      .then((response) =>\r\n        this.setState({\r\n          todos: [...this.state.todos, response.data],\r\n        })\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos\", {\r\n        params: {\r\n          _limit: 10,\r\n        },\r\n      })\r\n      .then((response) => this.setState({ todos: response.data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header headerSpan={this.state.show} />\r\n        <InputTodo addTodoProps={this.addTodoItem} />\r\n        <TodoLists\r\n          todos={this.state.todos}\r\n          handleChangeProps={this.handleChange}\r\n          deleteTodoProps={this.delTodo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoContainer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//component file\nimport TodoContainer from \"./Components/TodoContainer\";\nimport \"./App.css\";\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}